name: Version, Build, and Publish

on:
  push:
    branches:
      - '**'  # matches any branch

jobs:
  version-and-tag:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
      is_main: ${{ steps.set-version.outputs.is_main }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci
      
      - name: Version and Tag
        id: set-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          if [ "$BRANCH_NAME" = "main" ]; then
            echo "is_main=true" >> $GITHUB_OUTPUT
            npx semantic-release
            # Get the version after semantic-release updates it
            VERSION=$(node -p "require('./package.json').version")
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "is_main=false" >> $GITHUB_OUTPUT
            # Get current version from latest tag
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            # Remove the 'v' prefix if it exists
            CURRENT_VERSION=${LATEST_TAG#v}
            # If the version contains a hyphen (prerelease), get the base version
            if [[ "$CURRENT_VERSION" == *-* ]]; then
              CURRENT_VERSION=$(echo $CURRENT_VERSION | cut -d'-' -f1)
            fi
            
            SHORT_SHA=$(git rev-parse --short HEAD)
            # Create new version string with branch and SHA
            NEW_VERSION="${CURRENT_VERSION}-${SHORT_SHA}"
            echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
            
            # Update package.json version
            npm version "${NEW_VERSION}" --no-git-tag-version
            
            # Commit and tag
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add package.json
            git commit -m "chore(release): version ${NEW_VERSION} [skip ci]"
            git tag -a "v${NEW_VERSION}" -m "Release version ${NEW_VERSION}"
            git push origin "v${NEW_VERSION}"
            git push
          fi

  publish:
    needs: version-and-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
              
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'
              
      - name: Install dependencies
        run: npm ci
              
      - name: Update package version
        run: npm version ${{ needs.version-and-tag.outputs.version }} --no-git-tag-version
              
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
